---
- name: Create servers with the VPS provider of your choice.
  hosts: localhost
  gather_facts: false
  vars:
    ansible_ssh_common_args: "-o IgnoreUnknown=UseKeychain -o StrictHostKeyChecking=accept-new"
  tasks:
    - name: Ensure providers, servers, and hardware profiles are defined
      ansible.builtin.fail:
        msg: "You have an invalid configuration in your variables file (usually '.spin.yml'). Be sure providers, servers, and hardware_profiles are defined."
      when: >
        providers is not defined or
        providers is none or
        (providers | default([]) | length == 0) or
        hardware_profiles is not defined or
        hardware_profiles is none or
        (hardware_profiles | default([]) | length == 0)

    - name: Create servers
      ansible.builtin.include_role:
        name: serversideup.spin.create_server
      when: servers | selectattr('address', 'undefined') | list | length > 0

- name: Update newly created servers
  hosts: newly_created_servers
  gather_facts: false
  remote_user: "{{ initial_ssh_user | default('root') }}"
  become: true
  post_tasks:
    - name: Save newly created servers address for later use
      ansible.builtin.set_fact:
        newly_created_servers: >-
          {{
            groups['newly_created_servers'] | map('extract', hostvars) |
            map(attribute='ansible_host') | list
          }}
      delegate_to: localhost
      run_once: true
    - name: Refresh inventory to ensure all hosts are available
      ansible.builtin.meta: refresh_inventory
      run_once: true
      delegate_to: localhost

  vars:
    ansible_port: "{{ ssh_port }}"
    ansible_ssh_common_args: "-o IgnoreUnknown=UseKeychain -o StrictHostKeyChecking=accept-new"
    ansible_python_interpreter: auto_silent
  roles:
    - serversideup.spin.update_server 

- name: Configure Docker Swarm servers.
  hosts: "{{ hostvars['localhost'].newly_created_servers | default([]) if hostvars['localhost'].newly_created_servers is defined else (target | default('all')) }}"
  remote_user: "{{ (inventory_hostname in (hostvars['localhost'].newly_created_servers | default([]))) | ternary(initial_ssh_user | default('root'), spin_remote_user | default('root')) }}"
  become: true
  vars:
    ansible_port: "{{ ssh_port }}"
    ansible_ssh_common_args: "-o IgnoreUnknown=UseKeychain -o StrictHostKeyChecking=accept-new"
    ansible_python_interpreter: auto_silent
  pre_tasks:
    - name: Show error if no hosts found in the target group.
      ansible.builtin.fail:
        msg: "No hosts found in the target group '{{ hostvars['localhost'].newly_created_servers | default([]) if hostvars['localhost'].newly_created_servers is defined else (target | default('all')) }}'. Check your inventory configuration."
      when: groups[target | default('all')] | length == 0
      run_once: true
      delegate_to: localhost

    - name: Show groups for current host
      ansible.builtin.debug:
        msg:
          - "Host: {{ inventory_hostname }}"
          - "Groups: {{ group_names }}"

  roles:
    - serversideup.spin.linux_common
    - serversideup.spin.swarm
