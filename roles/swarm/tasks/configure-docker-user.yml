- name: Ensure the Docker user's group exists with the correct GID.
  ansible.builtin.group:
    name: "{{ docker_user.group | default('deploy') }}"
    gid: "{{ docker_user.gid | default('9999') }}"
    state: present

- name: Ensure the Docker user is created.
  ansible.builtin.user:
    name: "{{ docker_user.username }}"
    create_home: yes
    group: "{{ docker_user.group | default('deploy') }}"
    groups: "{{ docker_user.secondary_groups | default('docker') }}"
    home: "{{ docker_user.home | default(omit) }}"
    shell: /bin/bash
    state: present
    system: no
    uid: "{{ docker_user.uid | default('9999') }}"

- name: Set the authorized SSH keys for the Docker user from the variable file.
  ansible.posix.authorized_key:
    user: "{{ docker_user.username }}"
    state: present
    key: "{{ item }}"
  with_items: "{{ docker_user.authorized_ssh_keys }}"
  when: docker_user.authorized_ssh_keys is defined

- name: Set the authorized SSH keys for the Docker user from the "spin configure" command.
  ansible.posix.authorized_key:
    user: "{{ docker_user.username }}"
    state: present
    key: "{{ deploy_public_key }}"
  when: deploy_public_key is defined
  tags: spin-configure

- name: Add public keys of admin or sudo users to Docker user
  ansible.posix.authorized_key:
    user: "{{ docker_user.username }}"
    state: present
    key: "{{ item.authorized_keys.0.public_key }}"
  loop: "{{ users }}"
  when: "'sudo' in item.groups"