---
- name: Gather sudo users with their SSH keys
  set_fact:
    sudo_users: "{{ users | selectattr('groups', 'contains', 'sudo') | list }}"

- name: Get unique providers from servers
  set_fact:
    unique_providers: "{{ hardware_profiles | 
      selectattr('name', 'in', servers_missing_addresses | map(attribute='hardware_profile') | list) | map(attribute='provider') | list }}"

- name: Include provider-specific tasks
  include_tasks: "providers/{{ provider }}.yml"
  loop: "{{ unique_providers }}"
  loop_control:
    loop_var: provider
  vars:
    provider_servers: >-
      {%- set result = [] -%}
      {%- for server in servers_missing_addresses -%}
        {%- if server.hardware_profile in (hardware_profiles | selectattr('provider', 'equalto', provider) | map(attribute='name') | list) -%}
          {%- set profile_config = (hardware_profiles | selectattr('name', 'equalto', server.hardware_profile) | first).profile_config -%}
          {{- result.append(server | combine({'hardware_profile_config': profile_config})) -}}
        {%- endif -%}
      {%- endfor -%}
      {{- result -}}
    provider_config: "{{ providers | selectattr('name', 'equalto', provider) | first }}"

- name: Update .spin.yml with server IPs
  ansible.builtin.lineinfile:
    path: "{{ lookup('env', 'PWD') }}/.spin.yml"
    insertafter: "server_name: {{ item.key }}"
    line: "    server_address: {{ item.value }}"
  loop: "{{ server_ips | dict2items }}"

- name: Reload inventory
  meta: refresh_inventory